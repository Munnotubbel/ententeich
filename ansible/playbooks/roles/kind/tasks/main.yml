---
- name: Get hostname of local machine
  command: hostname
  register: hostname_result
  changed_when: false

- name: Set hostname fact
  set_fact:
    local_hostname: "{{ hostname_result.stdout }}"

- name: Create KinD configuration file
  template:
    src: kind-config.yaml.j2
    dest: /tmp/kind-config.yaml

- name: Check if KinD cluster exists
  command: kind get clusters
  register: kind_clusters
  changed_when: false
  ignore_errors: true

- name: Create KinD cluster
  command: kind create cluster --config /tmp/kind-config.yaml --name kind
  register: kind_create
  changed_when: "'Creating cluster' in kind_create.stdout"
  when: "'kind' not in kind_clusters.stdout"

- name: Install NGINX Ingress
  command: kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/main/deploy/static/provider/kind/deploy.yaml

- name: Wait for Ingress controller to be ready
  command: >
    kubectl wait --namespace ingress-nginx
    --for=condition=ready pod
    --selector=app.kubernetes.io/component=controller
    --timeout=300s
  register: wait_result
  until: wait_result.rc == 0
  retries: 10
  delay: 30

- name: Get cluster IP
  command: kubectl get nodes -o jsonpath='{.items[0].status.addresses[?(@.type=="InternalIP")].address}'
  register: cluster_ip_result
  changed_when: false

- name: Set cluster IP fact
  set_fact:
    cluster_ip: "{{ cluster_ip_result.stdout }}"

- name: Update /etc/hosts for custom domains
  become: yes
  lineinfile:
    path: /etc/hosts
    line: "{{ cluster_ip }} gitlab.{{ local_hostname }} registry.{{ local_hostname }} frontente.dev frontente.stg frontente.prod kuma.{{ local_hostname }}"
    state: present

- name: Configure Docker daemon to use local registry as insecure registry
  become: yes
  template:
    src: docker-daemon.json.j2
    dest: /etc/docker/daemon.json
  notify: Restart Docker

- name: Set kubectl context to kind
  command: kubectl config use-context kind-kind
  changed_when: false